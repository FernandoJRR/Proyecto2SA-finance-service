spring.application.name=finance-service

spring.profiles.active=local

#configuracion de eureka cliennt
#puerto random
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# base de datos
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/p2_sa_finance_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:p2_sa_finance_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:finance_service}


spring.jpa.hibernate.ddl-auto=update

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.http.converter=TRACE

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP:localhost:9094}

# Producer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Consumer
spring.kafka.consumer.group-id=finance-service
spring.kafka.consumer.auto‑offset‑reset=earliest
spring.kafka.consumer.key‑deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value‑deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.sap.common_lib.dto.response.users.event

spring.kafka.listener.ack-mode=RECORD
spring.kafka.listener.missing-topics-fatal=false